import 'package:flutter/material.dart';
import '../data/database_helper.dart';
import '../models/exercise_model.dart';
import 'exercise_detail_screen.dart';

class ExerciseLibraryScreen extends StatefulWidget {
  const ExerciseLibraryScreen({super.key});

  @override
  State<ExerciseLibraryScreen> createState() => _ExerciseLibraryScreenState();
}

class _ExerciseLibraryScreenState extends State<ExerciseLibraryScreen> {
  final dbHelper = DatabaseHelper();
  List<Exercise> exercises = [];
  String filterType = 'All';

  @override
  void initState() {
    super.initState();
    _loadExercises();
  }

  Future<void> _loadExercises() async {
    final all = await dbHelper.getAllExercises();
    setState(() {
      exercises = all;
    });
  }

  List<Exercise> get filteredExercises {
    if (filterType == 'All') return exercises;
    return exercises.where((ex) => ex.type == filterType).toList();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('مكتبة التمارين'),
        backgroundColor: Theme.of(context).colorScheme.primary,
      ),
      body: Column(
        children: [
          // فلترة حسب النوع
          SizedBox(
            height: 50,
            child: ListView(
              scrollDirection: Axis.horizontal,
              children: ['All', 'Boxing', 'Karate', 'Judo', 'MuayThai']
                  .map((type) => Padding(
                        padding: const EdgeInsets.symmetric(horizontal: 8),
                        child: ChoiceChip(
                          label: Text(type),
                          selected: filterType == type,
                          onSelected: (_) {
                            setState(() {
                              filterType = type;
                            });
                          },
                        ),
                      ))
                  .toList(),
            ),
          ),
          const SizedBox(height: 8),
          Expanded(
            child: ListView.builder(
              itemCount: filteredExercises.length,
              itemBuilder: (ctx, i) {
                final ex = filteredExercises[i];
                return ListTile(
                  leading: CircleAvatar(
                    backgroundColor: Theme.of(context).colorScheme.primaryContainer,
                    child: const Icon(Icons.sports_mma_outlined),
                  ),
                  title: Text(ex.name),
                  subtitle: Text(ex.type),
                  trailing: Text(ex.value),
                  onTap: () {
                    Navigator.push(
                      context,
                      MaterialPageRoute(
                        builder: (_) => ExerciseDetailScreen(exercise: ex),
                      ),
                    );
                  },
                );
              },
            ),
          ),
        ],
      ),
    );
  }
}
